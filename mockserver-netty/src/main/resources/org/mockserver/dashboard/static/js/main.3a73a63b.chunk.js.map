{"version":3,"sources":["store/configureStore.js","actions/index.js","components/RequestFilter.js","components/JsonItem.js","components/LogMessage.js","components/ListHeader.js","containers/LogList.js","containers/JsonList.js","containers/Grid.js","containers/App.js","index.js","reducers/entities.js","reducers/index.js","middleware/socket.js","middleware/exposeState.js","store/configureStore.prod.js"],"names":["module","exports","require","__webpack_require__","d","__webpack_exports__","CONNECT_SOCKET","SEND_MESSAGE","sendMessage","MESSAGE_RECEIVED","webSocketMessageReceived","DISCONNECT_SOCKET","disconnectSocket","message","host","port","secure","dispatch","type","sendWebSocketMessage","entities","filterNullsMultiValue","rawItems","items","undefined","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","rawItem","value","valueSet","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","values","err","return","name","push","loadData","_ref","_ref$host","_ref$port","_ref$secure","_ref$requestMatcher","requestMatcher","requestFilter","method","path","keepAlive","headers","queryStringParameters","cookies","enabled","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","filterNullsSingleValue","RequestFilter","renderValues","_ref2","fields","disabled","react_default","a","createElement","style","width","padding","paddingRight","display","verticalAlign","map","field","index","key","Field","fullWidth","component","TextField","hintText","onChange","e","console","log","floatingLabelText","index_es","minWidth","onClick","remove","remove_default","add_default","renderKeysToMultiValues","_ref3","title","color","paddingTop","textAlign","fontFamily","concat","AutoComplete","openOnFocus","filter","MUIAutoComplete","fuzzyFilter","dataSource","FieldArray","_this","mini","renderKeysToValues","_ref4","this","props","nextProps","expanded","margin","actAsExpander","showExpandableButton","backgroundColor","expandable","Toggle","label","labelPosition","marginBottom","paddingLeft","SelectField","primaryText","overflow","Component","selector","formValueSelector","reduxForm","form","initialValues","destroyOnUnmount","mapDispatchToProps","connect","state","requestFilterExpanded","pure","JsonItem","_this$props","_this$props$index","_this$props$displayIn","displayIndex","_this$props$collapsed","collapsed","_this$props$jsonItem","jsonItem","_this$props$display","_this$props$enableCli","enableClipboard","_this$props$textStyle","textStyle","Array","isArray","main_default","src","whiteSpace","theme","iconStyle","indentWidth","shouldCollapse","displayObjectSize","displayDataTypes","onEdit","onAdd","onDelete","maxWidth","textOverflow","calculateIndex","length","fontSize","lineHeight","position","top","left","counter","httpObject","httpRequest","statusCode","reasonPhrase","LogMessage","cellStyle","paddingBottom","borderRadius","_this$props$logMessag","logMessage","_this$props$logMessag2","logMessageMaxWidth","formattedMessage","messageFormatter","messageFormat","arguments","noBorderTop","children","timestamp","replace","Date","toISOString","split","trim","selectStyle","Object","assign","div","messageArguments","paddingWidth","messageParts","messageDiv","messagePartIndex","indexOf","reason","JSON","parse","JsonItem_JsonItem","paddingIndex","borderTopStyle","borderTopWidth","borderTopColor","ListHeader","_this$props$text","text","font","LogList","_this$props$header","header","_this$props$items","ListHeader_ListHeader","overflowY","maxHeight","minHeight","borderCollapse","item","LogMessage_LogMessage","JsonList","_this$props$reverseIn","reverseIndex","Grid","_this$props$entities","_this$props$entities$","activeExpectations","_this$props$entities$2","recordedExpectations","_this$props$entities$3","recordedRequests","_this$props$entities$4","logMessages","_this$props$entities$5","className","borderStyle","borderWidth","LogList_LogList","JsonList_JsonList","float","borderRightStyle","borderRightWidth","transform","result","expectation","httpResponse","_state$entities","_state$entities$activ","_state$entities$recor","_state$entities$recor2","_state$entities$logMe","_state$entities$logMe2","_state$requestFilter","App","components_RequestFilter","containers_Grid","window","location","search","hostname","protocol","store","configureStore","render","es","App_App","document","getElementById","action","rootReducer","combineReducers","middleware_socket","socket","connected","close","connectSocket","WebSocket","onmessage","event","data","onclose","onopen","readyState","send","stringify","exposeState","objectSpread","getState","preloadedState","createStore","applyMiddleware","thunk"],"mappings":"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","file":"static/js/main.3a73a63b.chunk.js","sourcesContent":["if (process.env.NODE_ENV === 'production') {\n    module.exports = require('./configureStore.prod')\n} else {\n    module.exports = require('./configureStore.dev')\n}\n","export const CONNECT_SOCKET = 'CONNECT_SOCKET';\n\nconst connectWebSocket = (host, port, secure, contextPath) => ({\n    type: CONNECT_SOCKET,\n    host: host,\n    port: port,\n    secure: secure,\n    contextPath: contextPath\n});\n\nexport const connectSocket = (host, port, secure, contextPath) => (dispatch) => {\n    return dispatch(connectWebSocket(host, port, secure, contextPath));\n};\n\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\n\nconst sendWebSocketMessage = (message, host, port, secure) => ({\n    type: SEND_MESSAGE,\n    message: message,\n    host: host,\n    port: port,\n    secure: secure\n});\n\nexport const sendMessage = (message, host, port, secure) => (dispatch) => {\n    return dispatch(sendWebSocketMessage(message, host, port, secure));\n};\n\nexport const MESSAGE_RECEIVED = 'MESSAGE_RECEIVED';\n\nexport const webSocketMessageReceived = (message) => ({\n    type: MESSAGE_RECEIVED,\n    entities: message\n});\n\nexport const DISCONNECT_SOCKET = 'DISCONNECT_SOCKET';\n\nconst disconnectWebSocket = () => ({\n    type: DISCONNECT_SOCKET\n});\n\nexport const disconnectSocket = () => (dispatch) => {\n    return dispatch(disconnectWebSocket());\n};\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Field, FieldArray, formValueSelector, reduxForm} from 'redux-form';\nimport {\n    AutoComplete as MUIAutoComplete,\n    Card,\n    CardHeader,\n    CardText,\n    FloatingActionButton,\n    MenuItem,\n    IconButton\n} from 'material-ui';\nimport ContentAdd from 'material-ui/svg-icons/content/add';\nimport ContentRemove from 'material-ui/svg-icons/content/remove';\nimport PropTypes from \"prop-types\";\nimport {AutoComplete, SelectField, TextField, Toggle,} from 'redux-form-material-ui';\nimport {disconnectSocket, sendMessage} from \"../actions\";\n\nlet filterNullsMultiValue = function (rawItems) {\n    let items = undefined;\n    for (let rawItem of rawItems) {\n        let valueSet = false;\n        for (let value of rawItem.values) {\n            if (value) {\n                valueSet = true;\n            }\n        }\n        if (rawItem.name && valueSet) {\n            if (!items) {\n                items = [];\n            }\n            items.push(rawItem);\n        }\n    }\n    return items;\n};\nlet filterNullsSingleValue = function (rawItems) {\n    let items = undefined;\n    for (let rawItem of rawItems) {\n        if (rawItem.name && rawItem.value) {\n            if (!items) {\n                items = [];\n            }\n            items.push(rawItem);\n        }\n    }\n    return items;\n};\nconst loadData = ({host = \"127.0.0.1\", port = \"1080\", secure = true, requestMatcher = {}, sendMessage}) => {\n    let requestFilter = {\n        method: undefined,\n        path: undefined,\n        keepAlive: undefined,\n        secure: undefined,\n        headers: undefined,\n        queryStringParameters: undefined,\n        cookies: undefined,\n    };\n    if (requestMatcher.enabled) {\n        requestFilter = {\n            method: requestMatcher.method,\n            path: requestMatcher.path,\n            keepAlive: requestMatcher.keepAlive ? true : undefined,\n            secure: requestMatcher.secure ? true : undefined,\n            headers: undefined,\n            queryStringParameters: undefined,\n            cookies: undefined,\n        };\n        requestFilter.cookies = filterNullsSingleValue(requestMatcher.cookies);\n        requestFilter.headers = filterNullsMultiValue(requestMatcher.headers);\n        requestFilter.queryStringParameters = filterNullsMultiValue(requestMatcher.queryStringParameters);\n    }\n    sendMessage(requestFilter, host, port, secure);\n};\n\nclass RequestFilter extends Component {\n    static propTypes = {\n        host: PropTypes.string.isRequired,\n        port: PropTypes.string.isRequired,\n        secure: PropTypes.bool.isRequired\n    };\n\n    componentWillUnmount() {\n        this.props.disconnectSocket()\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.requestMatcher !== this.props.requestMatcher || nextProps.expanded !== this.props.expanded) {\n            loadData(nextProps)\n        }\n    }\n\n    renderValues = ({fields, disabled}) => {\n        return (\n            <div style={{\n                width: \"50%\",\n                padding: \"5px\",\n                paddingRight: \"10px\",\n                display: \"inline-block\",\n                verticalAlign: \"bottom\",\n            }}>\n                {fields.map((field, index) => <div key={index} style={{\n                    display: \"inline-block\",\n                    width: \"70%\",\n                }}>\n\n                    <Field\n                        disabled={disabled}\n                        fullWidth={true}\n                        style={{\n                            width: \"75%\",\n                        }}\n                        name={field}\n                        component={TextField}\n                        hintText=\"Value\"\n                        onChange={(e) => {\n                            console.log(e)\n                        }}\n                        floatingLabelText=\"Value\"\n                    />\n                    {index > 0 ?\n                        <IconButton style={{\n                            display: \"inline-block\",\n                            verticalAlign: \"bottom\",\n                            minWidth: \"28px\",\n                            width: \"28px\",\n                        }} disabled={disabled} onClick={() => fields.remove(index)}>\n                            <ContentRemove/>\n                        </IconButton>\n                        : \"\"}\n\n                </div>)}\n                <IconButton style={{\n                    display: \"inline-block\",\n                    verticalAlign: \"bottom\",\n                    minWidth: \"28px\",\n                    width: \"28px\",\n                }} disabled={disabled} onClick={() => fields.push(\"\")}>\n                    <ContentAdd/>\n                </IconButton>\n            </div>)\n    };\n    renderKeysToMultiValues = ({fields, disabled, title}) => {\n        return (<div style={{\n            width: \"100%\",\n            display: \"inline-block\",\n            paddingRight: \"10px\",\n        }}>\n            <div style={{\n                color: disabled ? \"#9c9c9c\" : \"rgb(0, 188, 212)\",\n                width: \"20%\",\n                paddingTop: \"45px\",\n                paddingRight: \"15px\",\n                display: \"inline-block\",\n                verticalAlign: \"top\",\n                textAlign: \"right\",\n                fontFamily: \"Roboto, sans-serif\",\n            }}>{title}\n            </div>\n            <div style={{\n                display: \"inline-block\",\n                width: \"75%\",\n            }}>\n                {fields.map((field, index) => <div key={index} style={{\n                    display: \"inline-block\",\n                    width: \"80%\",\n                }}>\n                    <div style={{\n                        width: \"30%\",\n                        padding: \"5px\",\n                        display: \"inline-block\",\n                        verticalAlign: \"top\",\n                    }}>\n                        <Field\n                            disabled={disabled}\n                            name={`${field}.name`}\n                            component={AutoComplete}\n                            hintText=\"Name\"\n                            floatingLabelText=\"Name\"\n                            fullWidth={true}\n                            openOnFocus\n                            filter={MUIAutoComplete.fuzzyFilter}\n                            dataSource={[]}\n                        />\n                    </div>\n                    <FieldArray name={`${field}.values`} component={this.renderValues} disabled={disabled}/>\n                    {index > 0 ? <FloatingActionButton mini={true} style={{\n                        display: \"inline-block\",\n                        verticalAlign: \"bottom\"\n                    }} disabled={disabled} onClick={() => fields.remove(index)}>\n                        <ContentRemove/>\n                    </FloatingActionButton> : \"\"}\n                </div>)}\n                <FloatingActionButton mini={true} style={{\n                    display: \"inline-block\",\n                    verticalAlign: \"bottom\",\n                }} disabled={disabled} onClick={() => fields.push({\n                    values: [\"\"]\n                })}>\n                    <ContentAdd/>\n                </FloatingActionButton>\n            </div>\n        </div>)\n    };\n    renderKeysToValues = ({fields, disabled, title}) => {\n        return (<div style={{\n            width: \"100%\",\n            display: \"inline-block\",\n            paddingRight: \"10px\",\n        }}>\n            <div style={{\n                color: disabled ? \"#9c9c9c\" : \"rgb(0, 188, 212)\",\n                width: \"20%\",\n                paddingTop: \"45px\",\n                paddingRight: \"15px\",\n                display: \"inline-block\",\n                verticalAlign: \"top\",\n                textAlign: \"right\",\n                fontFamily: \"Roboto, sans-serif\",\n            }}>{title}\n            </div>\n            <div style={{\n                display: \"inline-block\",\n                width: \"75%\",\n            }}>\n                {fields.map((field, index) => <div key={index} style={{\n                    display: \"inline-block\",\n                    width: \"80%\",\n                }}>\n                    <div style={{\n                        width: \"30%\",\n                        padding: \"5px\",\n                        display: \"inline-block\",\n                        verticalAlign: \"top\",\n                    }}>\n                        <Field\n                            disabled={disabled}\n                            name={`${field}.name`}\n                            component={AutoComplete}\n                            hintText=\"Name\"\n                            floatingLabelText=\"Name\"\n                            fullWidth={true}\n                            openOnFocus\n                            filter={MUIAutoComplete.fuzzyFilter}\n                            dataSource={[]}\n                        />\n                    </div>\n                    <div style={{\n                        width: \"45%\",\n                        padding: \"5px\",\n                        paddingRight: \"10px\",\n                        display: \"inline-block\",\n                        verticalAlign: \"bottom\",\n                    }}>\n                        <Field\n                            disabled={disabled}\n                            fullWidth={true}\n                            name={`${field}.value`}\n                            component={TextField}\n                            hintText=\"Value\"\n                            floatingLabelText=\"Value\"\n                        />\n                    </div>\n                    {index > 0 ? <FloatingActionButton mini={true} style={{\n                        display: \"inline-block\",\n                        verticalAlign: \"bottom\"\n                    }} disabled={disabled} onClick={() => fields.remove(index)}>\n                        <ContentRemove/>\n                    </FloatingActionButton> : \"\"}\n                </div>)}\n                <FloatingActionButton mini={true} style={{\n                    display: \"inline-block\",\n                    verticalAlign: \"bottom\",\n                }} disabled={disabled} onClick={() => fields.push({})}>\n                    <ContentAdd/>\n                </FloatingActionButton>\n            </div>\n        </div>)\n    };\n\n    render() {\n        const disabled = !this.props.requestMatcher.enabled;\n        return (\n            <div style={{\n                margin: \"1%\",\n                width: \"98%\"\n            }}>\n                <Card expanded={this.expanded}>\n                    <CardHeader\n                        title=\"Filter\"\n                        actAsExpander={true}\n                        showExpandableButton={true}\n                        style={{\n                            backgroundColor: disabled ? \"rgba(220, 220, 220, 0.5)\" : \"rgba(0, 188, 212, 0.75)\"\n                        }}\n                    />\n                    <CardText expandable={true}>\n                        <div style={{\n                            display: \"inline\"\n                        }}>\n                            <div style={{\n                                width: \"10%\",\n                                display: \"inline-block\",\n                                verticalAlign: \"top\",\n                            }}>\n                                <div style={{\n                                    paddingRight: \"10px\",\n                                    padding: \"5px\",\n                                    display: \"inline-block\",\n                                }}>\n                                    <Field\n                                        name=\"enabled\"\n                                        component={Toggle}\n                                        label=\"Enabled\"\n                                        labelPosition=\"left\"\n                                    />\n                                </div>\n                            </div>\n                            <div style={{\n                                width: \"90%\",\n                                display: \"inline-block\",\n                                verticalAlign: \"bottom\",\n                                marginBottom: \"2%\",\n                            }}>\n                                <div style={{\n                                    width: \"32%\",\n                                    paddingLeft: \"3%\",\n                                    display: \"inline-block\",\n                                    verticalAlign: \"top\",\n                                }}>\n                                    <div>\n                                        <div style={{\n                                            width: \"45%\",\n                                            padding: \"5px\",\n                                            display: \"inline-block\",\n                                            verticalAlign: \"top\",\n                                        }}>\n                                            <Field\n                                                disabled={disabled}\n                                                name=\"method\"\n                                                component={SelectField}\n                                                fullWidth={true}\n                                                floatingLabelText=\"Method\"\n                                            >\n                                                <MenuItem value=\"\" primaryText=\"\" />\n                                                <MenuItem value=\"CONNECT\" primaryText=\"CONNECT\" />\n                                                <MenuItem value=\"DELETE\" primaryText=\"DELETE\" />\n                                                <MenuItem value=\"GET\" primaryText=\"GET\" />\n                                                <MenuItem value=\"HEAD\" primaryText=\"HEAD\" />\n                                                <MenuItem value=\"OPTIONS\" primaryText=\"OPTIONS\" />\n                                                <MenuItem value=\"PATCH\" primaryText=\"PATCH\" />\n                                                <MenuItem value=\"POST\" primaryText=\"POST\" />\n                                                <MenuItem value=\"PUT\" primaryText=\"PUT\" />\n                                                <MenuItem value=\"TRACE\" primaryText=\"TRACE\" />\n                                            </Field>\n                                        </div>\n\n                                        <div style={{\n                                            width: \"45%\",\n                                            padding: \"5px\",\n                                            display: \"inline-block\",\n                                            verticalAlign: \"top\",\n                                        }}>\n                                            <Field\n                                                disabled={disabled}\n                                                name=\"path\"\n                                                component={TextField}\n                                                fullWidth={true}\n                                                hintText=\"Path\"\n                                                floatingLabelText=\"Path\"\n                                            />\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <div style={{\n                                            width: \"45%\",\n                                            padding: \"5px\",\n                                            display: \"inline-block\",\n                                            verticalAlign: \"bottom\",\n                                        }}>\n                                            <Field\n                                                disabled={disabled}\n                                                name=\"secure\"\n                                                component={Toggle}\n                                                label=\"Secure\"\n                                                labelPosition=\"right\"\n                                            />\n                                        </div>\n\n                                        <div style={{\n                                            width: \"45%\",\n                                            padding: \"5px\",\n                                            display: \"inline-block\",\n                                            verticalAlign: \"bottom\",\n                                            overflow: \"none\",\n                                        }}>\n                                            <Field\n                                                disabled={disabled}\n                                                name=\"keepAlive\"\n                                                component={Toggle}\n                                                label=\"Keep-Alive\"\n                                                labelPosition=\"right\"\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{\n                                    width: \"65%\",\n                                    display: \"inline-block\",\n                                    verticalAlign: \"bottom\",\n                                }}>\n                                    <div>\n                                        <FieldArray name={`headers`} component={this.renderKeysToMultiValues}\n                                                    disabled={disabled} title={\"Headers:\"}/>\n                                        <FieldArray name={`cookies`} component={this.renderKeysToValues}\n                                                    disabled={disabled}\n                                                    title={\"Cookies:\"}/>\n                                        <FieldArray name={`queryStringParameters`}\n                                                    component={this.renderKeysToMultiValues}\n                                                    disabled={disabled} title={\"Query Parameters:\"}/>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </CardText>\n                </Card>\n            </div>\n        );\n    }\n}\n\nconst formName = 'requestFilter';\nconst selector = formValueSelector(formName);\n\nRequestFilter = reduxForm({\n    form: formName,\n    initialValues: {\n        headers: [{\n            values: [\"\"]\n        }],\n        queryStringParameters: [{\n            values: [\"\"]\n        }],\n        cookies: [{}],\n    },\n    destroyOnUnmount: false\n})(RequestFilter);\n\nconst mapStateToProps = (state, props) => {\n    return {\n        requestMatcher: selector(state, 'enabled', 'method', 'path', 'keepAlive', 'secure', 'headers', 'queryStringParameters', 'cookies'),\n        expanded: state.requestFilterExpanded,\n    }\n};\n\nconst mapDispatchToProps = {\n    sendMessage,\n    disconnectSocket\n};\n\nRequestFilter = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    undefined,\n    {pure: true}\n)(RequestFilter);\n\nexport default RequestFilter;","import React, {Component} from 'react';\nimport ReactJson from 'react-json-view';\n\nexport default class JsonItem extends Component {\n    static calculateIndex(counter, jsonItem) {\n        let httpObject = jsonItem;\n        let index = null;\n        if (httpObject) {\n            if (httpObject.httpRequest) {\n                httpObject = httpObject.httpRequest;\n            }\n            if (httpObject.method) {\n                index = httpObject.method;\n            }\n            if (httpObject.path) {\n                const value = httpObject.path;\n                if (index) {\n                    index = index + \" \" + value;\n                } else {\n                    index = value;\n                }\n            }\n            if (httpObject.statusCode) {\n                const value = httpObject.statusCode;\n                if (index) {\n                    index = index + \" \" + value;\n                } else {\n                    index = value;\n                }\n            }\n            if (httpObject.reasonPhrase) {\n                const value = httpObject.reasonPhrase;\n                if (index) {\n                    index = index + \" \" + value;\n                } else {\n                    index = value;\n                }\n            }\n        }\n        return index;\n    }\n\n    render() {\n        const {\n            index = 0,\n            displayIndex = true,\n            collapsed = 0,\n            jsonItem = null,\n            display = \"block\",\n            enableClipboard = true,\n            textStyle = {}\n        } = this.props;\n\n        if (Array.isArray(jsonItem)) {\n            return (<ReactJson\n                src={jsonItem}\n                style={{\n                    whiteSpace: \"nowrap\",\n                    paddingTop: \"6px\",\n                    display: (display === \"table-cell\" ? \"table-cell\" : \"block\")\n                }}\n                name={null}\n                theme={\"tomorrow\"}\n                iconStyle={\"triangle\"}\n                indentWidth={4}\n                collapsed={collapsed != null ? collapsed : 0}\n                shouldCollapse={() => {\n                    return false\n                }}\n                enableClipboard={enableClipboard}\n                displayObjectSize={false}\n                displayDataTypes={false}\n                onEdit={false}\n                onAdd={false}\n                onDelete={false}\n            />);\n        } else if (typeof jsonItem === \"object\") {\n            return (<ReactJson\n                src={jsonItem}\n                style={{\n                    whiteSpace: \"nowrap\",\n                    paddingTop: \"6px\",\n                    display: (display === \"table-cell\" ? \"table-cell\" : \"block\")\n                }}\n                name={displayIndex ? <div style={{\n                    display: \"table-cell\",\n                    maxWidth: \"200px\",\n                    minWidth: \"115px\",\n                    textOverflow: \"ellipsis\",\n                    overflow: \"hidden\"\n                }}>{JsonItem.calculateIndex(index != null ? \"\" + index : index, jsonItem)}</div> : null}\n                theme={\"tomorrow\"}\n                iconStyle={\"triangle\"}\n                indentWidth={4}\n                collapsed={collapsed != null ? collapsed : 0}\n                shouldCollapse={() => {\n                    return false\n                }}\n                enableClipboard={enableClipboard}\n                displayObjectSize={false}\n                displayDataTypes={false}\n                onEdit={false}\n                onAdd={false}\n                onDelete={false}\n            />);\n        } else if (typeof jsonItem === \"string\" && jsonItem.length > 20) {\n            return (\n                <details style={textStyle}>\n                    <summary style={{\n                        color: \"rgb(222, 147, 95)\",\n                        fontSize: \"30px\",\n                        lineHeight: \"15px\",\n                        display: \"table-cell\"\n                    }}><span>...</span>\n                    </summary>\n                    <pre style={{\n                        position: \"relative\",\n                        top: \"-5px\",\n                        left: \"20px\",\n                        paddingRight: \"35px\"\n                    }}>{jsonItem}</pre>\n                </details>\n            );\n        } else if (typeof jsonItem === \"string\") {\n            return (\n                <pre style={textStyle}>{jsonItem}</pre>\n            );\n        } else if (typeof jsonItem === \"number\") {\n            return (\n                <pre style={textStyle}>{jsonItem}</pre>\n            );\n        } else {\n            return (<div/>);\n        }\n    }\n};\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport JsonItem from \"./JsonItem\";\nimport './log.css';\n\nexport default class LogMessage extends Component {\n    static propTypes = {\n        logMessage: PropTypes.object.isRequired\n    };\n    cellStyle = {\n        paddingTop: \"5px\",\n        paddingLeft: \"4px\",\n        paddingRight: \"4px\",\n        paddingBottom: \"3px\",\n        margin: \"2px 0px 3px\",\n        borderRadius: \"2px\",\n        display: \"table-cell\",\n        verticalAlign: \"top\",\n        fontFamily: \"Roboto,sans-serif\"\n    };\n\n    static messageFormatter(message, messageArguments, cellStyle, paddingWidth) {\n        let formattedMessage = [];\n        const messageParts = (message || \"\").split(\"{}\");\n        let messageDiv = 0;\n        for (let messagePartIndex = 0; messagePartIndex < messageParts.length; messagePartIndex++) {\n            if (messageParts[messagePartIndex].length > 0) {\n                formattedMessage.push(<div style={cellStyle}\n                                           key={\"msg\" + messagePartIndex}>{messageParts[messagePartIndex]}</div>);\n                messageDiv++;\n            }\n            if (messageArguments && messageArguments.length > 0 && messageArguments.length > messagePartIndex) {\n                if (messageParts[messagePartIndex].indexOf(\"because:\") !== -1) {\n                    let reason = messageArguments[messagePartIndex].split(\",\").map(\n                        (reason, index) => {\n                            let color = \"orange\";\n                            if (reason.indexOf(\"matched\") !== -1) {\n                                color = \"rgb(85, 205, 189)\";\n                            } else if (reason.indexOf(\"didn't match\") !== -1) {\n                                color = \"rgb(234, 67, 106)\";\n                            }\n                            return <span key={index}\n                                         style={{\n                                             display: \"block\",\n                                             fontSize: \"0.85em\",\n                                             lineHeight: \"1.25em\",\n                                             color: color\n                                         }}>{reason}</span>\n                        }\n                    );\n                    let style = Object.assign({}, cellStyle);\n                    style.paddingTop = \"0px\";\n                    formattedMessage.push(\n                        <div style={style} key={\"arg\" + messagePartIndex}>\n                            <details>\n                                <summary style={{\n                                    color: \"rgb(222, 147, 95)\",\n                                    fontSize: \"30px\",\n                                    lineHeight: \"15px\"\n                                }}><span>...</span>\n                                </summary>\n                                {reason}\n                            </details>\n                        </div>);\n                } else {\n                    let jsonItem = messageArguments[messagePartIndex];\n                    if (typeof jsonItem === \"string\" && messageParts[messagePartIndex].indexOf(\"generated output:\") !== -1) {\n                        try {\n                            jsonItem = JSON.parse(jsonItem);\n                        } catch (e) {\n                            // ignore error in parsing, instead just output string\n                        }\n                    }\n                    formattedMessage.push(<JsonItem key={\"arg\" + messagePartIndex}\n                                                    index={null}\n                                                    displayIndex={messageParts[messagePartIndex].indexOf(\"for action:\") === -1}\n                                                    collapsed=\"0\"\n                                                    display={\"table-cell\"}\n                                                    textStyle={{\n                                                        fontFamily: \"Roboto, sans-serif\",\n                                                        backgroundColor: \"rgb(29, 31, 33)\",\n                                                        display: \"table-cell\",\n                                                        verticalAlign: \"top\"\n                                                    }}\n                                                    enableClipboard={false}\n                                                    jsonItem={jsonItem}/>);\n                }\n                messageDiv++;\n            }\n        }\n        for (let paddingIndex = messageDiv; paddingIndex < paddingWidth; paddingIndex++) {\n            formattedMessage.push(<div key={\"pad\" + paddingIndex} style={cellStyle}> </div>);\n        }\n        return formattedMessage;\n    };\n\n    static selectStyle(type, noBorderTop) {\n        let style = {\n            borderTopStyle: \"dashed\",\n            borderTopWidth: \"1px\",\n            borderTopColor: \"#cfcccc57\",\n            whiteSpace: \"nowrap\",\n            overflow: \"auto\",\n            display: \"table-row\",\n            width: \"100%\"\n        };\n        if (noBorderTop) {\n            style.borderTopWidth = \"0\";\n        }\n        switch (type) {\n            case \"TRACE\":\n                style.color = \"rgb(255, 255, 255)\";\n                break;\n            case \"CLEARED\":\n                style.color = \"rgb(222, 147, 95)\";\n                break;\n            case \"RETRIEVED\":\n                style.color = \"rgb(222, 147, 95)\";\n                break;\n            case \"CREATED_EXPECTATION\":\n                style.color = \"rgb(216,199,166)\";\n                break;\n            case \"EXPECTATION_RESPONSE\":\n                style.color = \"rgb(161,208,231)\";\n                break;\n            case \"EXPECTATION_MATCHED\":\n                style.color = \"rgb(117,185,186)\";\n                break;\n            case \"EXPECTATION_NOT_MATCHED\":\n                style.color = \"rgb(204,165,163)\";\n                break;\n            case \"VERIFICATION\":\n                style.color = \"rgb(178, 148, 187)\";\n                break;\n            case \"VERIFICATION_FAILED\":\n                style.color = \"rgb(234, 67, 106)\";\n                break;\n            case \"FORWARDED_REQUEST\":\n                style.color = \"rgb(152, 208, 255)\";\n                break;\n            case \"TEMPLATE_GENERATED\":\n                style.color = \"rgb(255, 255, 255)\";\n                break;\n            case \"SERVER_CONFIGURATION\":\n                style.color = \"rgb(201, 125, 240)\";\n                break;\n            case \"WARN\":\n                style.color = \"rgb(255, 255, 255)\";\n                style.whiteSpace = \"pre-wrap\";\n                break;\n            case \"EXCEPTION\":\n                style.color = \"rgb(255,133,133)\";\n                style.whiteSpace = \"pre-wrap\";\n                break;\n            default:\n                style.color = \"rgb(201, 125, 240)\"; // spare\n        }\n        return style;\n    }\n\n    render() {\n        const {\n            logMessage = {},\n            logMessageMaxWidth = 0,\n            index\n        } = this.props;\n        const formattedMessage = LogMessage.messageFormatter(logMessage.messageFormat, logMessage.arguments, this.cellStyle, logMessageMaxWidth);\n        const noBorderTop = (formattedMessage[0] && formattedMessage[0].props.children <= 1) || index === 0;\n        const timestamp = logMessage.timestamp && logMessage.timestamp.replace((new Date()).toISOString().split('T')[0], \"\").trim();\n        return (<div style={LogMessage.selectStyle(logMessage.type, noBorderTop)}>\n            <div style={Object.assign({whiteSpace: \"nowrap\"}, this.cellStyle)}>{timestamp}</div>\n            {formattedMessage.map(div => div)}\n        </div>)\n    }\n};\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ListHeader extends Component {\n    static propTypes = {\n        text: PropTypes.string.isRequired\n    };\n\n    render() {\n        const {\n            text = \"\"\n        } = this.props;\n        return (\n            <div style={{\n                font: \"1.25em 'Averia Sans Libre', Helvetica, Arial, sans-serif\",\n                margin: \"0px 0px 3px 2px\"\n            }}>{text}</div>\n        )\n    }\n};\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport LogMessage from \"../components/LogMessage\";\nimport ListHeader from \"../components/ListHeader\";\n\nexport default class LogList extends Component {\n    static propTypes = {\n        header: PropTypes.string.isRequired,\n        items: PropTypes.arrayOf(PropTypes.shape({\n            key: PropTypes.string.isRequired,\n            value: PropTypes.object.isRequired\n        })).isRequired,\n        logMessageMaxWidth: PropTypes.number.isRequired,\n    };\n\n    render() {\n        const {\n            header = \"\",\n            items = [],\n            logMessageMaxWidth = 0,\n        } = this.props;\n        return (\n            <div style={{\n                padding: \"2px 0\"\n            }}>\n                <ListHeader text={header}/>\n                <div style={{\n                    overflowY: \"scroll\",\n                    maxHeight: \"400px\",\n                    minHeight: \"100px\",\n                    borderRadius: \"5px\",\n                    margin: \"2px 0px 3px\",\n                    padding: \"5px\",\n                    backgroundColor: \"rgb(29, 31, 33)\",\n                    color: \"rgb(250, 250, 250)\",\n                }}>\n                    <div style={\n                        {\n                            borderCollapse: \"collapse\",\n                            display: \"table\",\n                            minWidth: \"100%\"\n                        }\n                    }>\n                        {items.map((item, index) => <LogMessage index={index}\n                                                                      key={item.key}\n                                                                      logMessage={item.value}\n                                                                      logMessageMaxWidth={logMessageMaxWidth}/>)}\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport JsonItem from \"../components/JsonItem\";\nimport ListHeader from \"../components/ListHeader\";\n\nexport default class JsonList extends Component {\n    static propTypes = {\n        header: PropTypes.string.isRequired,\n        items: PropTypes.arrayOf(PropTypes.shape({\n            key: PropTypes.string.isRequired,\n            value: PropTypes.object.isRequired\n        })).isRequired,\n    };\n\n    render() {\n        const {\n            header = \"\",\n            items = [],\n            reverseIndex = true\n        } = this.props;\n        return (\n            <div style={{\n                padding: \"2px 0\"\n            }}>\n                <ListHeader text={header}/>\n                <div style={{\n                    overflowY: \"scroll\",\n                    maxHeight: \"400px\",\n                    minHeight: \"100px\",\n                    borderRadius: \"5px\",\n                    margin: \"2px 0px 3px\",\n                    padding: \"5px\",\n                    backgroundColor: \"rgb(29, 31, 33)\",\n                    color: \"rgb(250, 250, 250)\",\n                }}>\n                    {items.map((item, index) => <JsonItem index={reverseIndex ? items.length - index : index + 1}\n                                                              key={item.key}\n                                                              jsonItem={item.value}/>)}\n                </div>\n            </div>\n        );\n    }\n};\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport LogList from \"../containers/LogList\";\nimport JsonList from \"../containers/JsonList\";\nimport {transform} from 'lodash/object'\nimport './grid.css';\n\nclass Grid extends Component {\n    static propTypes = {\n        entities: PropTypes.shape({\n            activeExpectations: PropTypes.array.isRequired,\n            recordedExpectations: PropTypes.array.isRequired,\n            recordedRequests: PropTypes.array.isRequired,\n            logMessages: PropTypes.array.isRequired,\n            logMessageMaxWidth: PropTypes.number.isRequired,\n        }).isRequired,\n        requestFilter: PropTypes.object.isRequired,\n    };\n\n    render() {\n        const {\n            entities: {\n                activeExpectations = [],\n                recordedExpectations = [],\n                recordedRequests = [],\n                logMessages = [],\n                logMessageMaxWidth = 0\n            },\n        } = this.props;\n        return (\n            <div style={{\n                margin: \"1%\",\n                width: \"98%\"\n            }}>\n                <div className=\"row\" style={{\n                    borderStyle: \"dashed\",\n                    borderWidth: \"1px\",\n                    margin: \"15px 0\",\n                    padding: \"17px 17px\",\n                    minWidth: \"600px\",\n                }}>\n                    <LogList items={logMessages}\n                             header={\"Log Messages (most recent at the top)\"}\n                             logMessageMaxWidth={logMessageMaxWidth}/>\n                </div>\n                <div className=\"row\" style={{\n                    borderStyle: \"dashed\",\n                    borderWidth: \"1px\",\n                    margin: \"15px 0\",\n                    padding: \"17px 17px\",\n                    minWidth: \"600px\",\n                }}>\n                    <JsonList items={activeExpectations}\n                              header={\"Active Expectations (in the order they are applied)\"}\n                              reverseIndex={false}/>\n                </div>\n                <div className=\"row\" style={{\n                    borderStyle: \"dashed\",\n                    borderWidth: \"1px\",\n                    margin: \"15px 0\",\n                    padding: \"17px 17px\",\n                    minWidth: \"600px\",\n                }}>\n                    <div style={{\n                        width: \"49%\",\n                        float: \"left\",\n                        padding: \"0\",\n                        paddingRight: \"1%\",\n                        borderRightStyle: \"dashed\",\n                        borderRightWidth: \"1px\",\n                    }}>\n                        <JsonList items={recordedRequests}\n                                  header={\"Received Requests (most recent at the top)\"}/>\n                    </div>\n                    <div style={{\n                        width: \"49%\",\n                        float: \"right\"\n                    }}>\n                        <JsonList items={transform(recordedExpectations, function (result, expectation) {\n                            result.push({\n                                key: expectation.key,\n                                value: {\n                                    httpRequest: expectation.value.httpRequest,\n                                    httpResponse: expectation.value.httpResponse,\n                                },\n                            });\n                        }, [])} header={\"Proxied Requests (most recent at the top)\"}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const {\n        activeExpectations = [],\n        recordedExpectations = [],\n        recordedRequests = [],\n        logMessages = [],\n        logMessageMaxWidth = 0\n    } = state.entities;\n\n    const {\n        requestFilter = {}\n    } = state;\n\n    return {\n        entities: {\n            activeExpectations,\n            recordedExpectations,\n            recordedRequests,\n            logMessages,\n            logMessageMaxWidth\n        },\n        requestFilter\n    }\n};\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Grid)\n","import React, {Component} from 'react';\nimport RequestFilter from \"../components/RequestFilter\";\nimport Grid from './Grid';\nimport {parse} from 'query-string';\n\nexport default class App extends Component {\n    static host() {\n        if (window.location.search && parse(window.location.search).host) {\n            return parse(window.location.search).host;\n        } else if (window.location.hostname) {\n            return window.location.hostname;\n        }\n        return window.location.hostname;\n    }\n\n    static port() {\n        if (window.location.search && parse(window.location.search).port) {\n            return parse(window.location.search).port;\n        } else if (window.location.port) {\n            return window.location.port;\n        } else if (window.location.protocol === \"https:\") {\n            return 443;\n        } else {\n            return 80;\n        }\n    }\n\n    static secure() {\n        if (window.location.protocol) {\n            return window.location.protocol === \"https:\";\n        } else {\n            return false;\n        }\n    }\n\n    render() {\n        return (<div>\n            <RequestFilter host={App.host()} port={App.port()} secure={App.secure()}/>\n            <Grid/>\n        </div>)\n    }\n}\n","import React from 'react'\nimport {render} from 'react-dom'\nimport {Provider} from 'react-redux'\nimport App from './containers/App'\nimport configureStore from './store/configureStore'\nimport {MuiThemeProvider} from \"material-ui\";\n\nconst store = configureStore();\n\nrender(\n    <Provider store={store}>\n        <MuiThemeProvider>\n            <App/>\n        </MuiThemeProvider>\n    </Provider>,\n    document.getElementById('app')\n);\n","import {MESSAGE_RECEIVED} from '../actions'\n\nconst entities = (state = {\n    activeExpectations: [],\n    recordedExpectations: [],\n    recordedRequests: [],\n    logMessages: []\n}, action) => {\n    if (action.type === MESSAGE_RECEIVED && action.entities) {\n        return {\n            activeExpectations: action.entities.activeExpectations ? action.entities.activeExpectations : [],\n            recordedExpectations: action.entities.recordedExpectations ? action.entities.recordedExpectations : [],\n            recordedRequests: action.entities.recordedRequests ? action.entities.recordedRequests : [],\n            logMessages: action.entities.logMessages,\n            logMessageMaxWidth: 150\n        };\n    }\n    return state;\n};\n\nexport default entities","import {combineReducers} from 'redux'\nimport {reducer as form} from 'redux-form'\nimport entities from './entities'\n\nconst rootReducer = combineReducers({\n    entities,\n    form,\n});\n\nexport default rootReducer","import {CONNECT_SOCKET, DISCONNECT_SOCKET, SEND_MESSAGE, webSocketMessageReceived} from '../actions'\n\nexport default (function () {\n    let socket = null;\n    let connected = false;\n\n    let disconnectSocket = function () {\n        connected = false;\n        if (socket != null) {\n            socket.close()\n        }\n        socket = null\n    };\n    let connectSocket = function (action, next) {\n        if (socket != null) {\n            socket.close()\n        }\n        socket = new WebSocket((action.secure ? \"wss\" : \"ws\") + \"://\" + action.host + \":\" + action.port + \"/_mockserver_ui_websocket\");\n        socket.onmessage = (event) => {\n            next(webSocketMessageReceived(\n                JSON.parse(event.data)\n            ))\n        };\n        socket.onclose = () => {\n            disconnectSocket();\n        };\n        socket.onopen = () => {\n            connected = true;\n            if (socket && action.message && socket.readyState === 1) {\n                socket.send(JSON.stringify(action.message))\n            }\n        }\n    };\n    return store => next => action => {\n        switch (action.type) {\n            case CONNECT_SOCKET:\n                connectSocket(action, next);\n                break;\n            case DISCONNECT_SOCKET:\n                disconnectSocket();\n                break;\n            case SEND_MESSAGE:\n                if (connected) {\n                    socket.send(JSON.stringify(action.message))\n                } else {\n                    connectSocket(action, next)\n                }\n                break;\n            default:\n                // listen for changes here\n                return next(action)\n        }\n    }\n\n})()","export default store => next => action => {\n    next({ ...action, getState: store.getState });\n}","import {applyMiddleware, createStore} from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from '../reducers'\nimport socket from '../middleware/socket'\nimport exposeState from \"../middleware/exposeState\";\n\nconst configureStore = preloadedState => {\n    return createStore(\n        rootReducer,\n        preloadedState,\n        applyMiddleware(thunk, socket, exposeState)\n    )\n};\n\nexport default configureStore\n"],"sourceRoot":""}